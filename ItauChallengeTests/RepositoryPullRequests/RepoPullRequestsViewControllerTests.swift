//
//  RepoPullRequestsViewControllerTests.swift
//  ItauChallenge
//
//  Created by Vinicius Custodio on 24/07/20.
//  Copyright (c) 2020 Vinicius Custodio. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ItauChallenge
import XCTest

class RepoPullRequestsViewControllerTests: XCTestCase {

    // MARK: Subject under test
    var sut: RepoPullRequestsController!
    var window: UIWindow!

    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupRepoPullRequestsViewController()
    }

    override func tearDown() {
        window = nil
        super.tearDown()
    }

    // MARK: Test setup

    func setupRepoPullRequestsViewController() {
        let bundle = Bundle.main
        let repoPullRequestsViewController = UIStoryboard(name: "RepoPullRequests", bundle: bundle).instantiateViewController(withIdentifier: "RepoPullRequestsController") as! RepoPullRequestsController
        sut = repoPullRequestsViewController
    }

    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }

    // MARK: Tests
    func testShouldDoSomethingWhenViewIsLoaded() {
        // Given
        let mock = MockRepoPullRequestsBusinessLogic()
        sut.interactor = mock

        // When
        loadView()

        // Then
        XCTAssertTrue(mock.pullRequests)
    }

    func testDisplaySomething() {
        // Given
        let repository = Repository(fullName: "user/repo",
                                    description: "teste",
                                    forks: 0, stargazersCount: 0,
                                    owner: User(login: "user",
                                                avatarUrl: URL(string: mockAvatarUrl)!))
        sut.router?.dataStore?.repository = repository

        let pullRequest = PullRequest(title: "Title",
                                      user: User(login: "Login", avatarUrl: URL(string: mockAvatarUrl)!), body: "Body")
        let viewModel = RepoPullRequests.LoadPullRequests.ViewModel(pullRequests: [pullRequest])


        // When
        loadView()
        sut.showPullRequests(viewModel)

        let cell = sut.tableView.cellForRow(at: IndexPath(item: 0, section: 0)) as! RepositoryPullRequestsCell

        // Then
        XCTAssertEqual(cell.titleLabel.text, pullRequest.title)
    }
}

class MockRepoPullRequestsBusinessLogic: RepoPullRequestsBusinessLogic {
    var pullRequests:Bool = false

    func loadPullRequests(_ request: RepoPullRequests.LoadPullRequests.Request) {
        pullRequests = true
    }
}
